buildscript {
    ext {
        kotlinVersion = '1.4.10'
        springBootVersion = '2.1.0.RELEASE'
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-noarg:${kotlinVersion}")
        classpath "io.spring.gradle:dependency-management-plugin:1.0.6.RELEASE"
    }
}

plugins {
    id 'java'
    id 'maven'
    id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
    id "org.jetbrains.kotlin.plugin.allopen" version "$kotlinVersion"
}
allOpen {
    annotation("javax.persistence.Entity")
    annotation("javax.persistence.MappedSuperclass")
    annotation("javax.persistence.Embeddable")
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-spring'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "kotlin-jpa"

group = "com.netsensia.rivalchess"
version = '1.0.0'

jar.baseName("rivalchess-vie-recorder")

jar {
    manifest {
        attributes 'Main-Class': 'com.netsensia.rivalchess.recorder.RecorderKt'
    }

    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

repositories {
    mavenLocal()
    mavenCentral()
    jcenter()
}

dependencies {
    testImplementation 'junit:junit:4.12'
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation 'com.netsensia.rivalchess:rivalchess-vie-model:3.2.0'
    compile 'com.netsensia.rivalchess:rivalchess-vie-utils:25.0.3'
    implementation "com.fasterxml.jackson.module:jackson-module-kotlin:2.11.+"
    implementation 'com.google.code.gson:gson:2.8.2'
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile("org.jetbrains.kotlin:kotlin-reflect")
    implementation group: 'khttp', name: 'khttp', version: '1.0.0'
    compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.22'
}

test {
    useJUnit()
    maxHeapSize = '1G'
    testLogging.showStandardStreams = true
}

compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
